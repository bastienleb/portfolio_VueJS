import { defineAsyncComponent as c, defineComponent as p, resolveComponent as m, openBlock as o, createElementBlock as s, createElementVNode as a, renderSlot as l, Fragment as g, createVNode as d, Transition as i, withCtx as u, createBlock as _, createCommentVNode as r } from "vue";
import { _ as v } from "./GSArrow-d3dc6242.mjs";
const w = c(() => import("./GSArrow-d3dc6242.mjs").then((e) => e.G)), y = p({
  name: "GSLayoutDefault",
  components: {
    GSArrow: w
  },
  props: {
    onMove: {
      type: Function,
      required: !0
    },
    disabledSide: {
      type: String,
      required: !0
    },
    /**
     * layout specific props
     */
    disableArrows: {
      type: Boolean,
      default: !1
    }
  }
});
const S = { class: "gsl-default" }, k = { class: "gsl-default__indicator" };
function G(e, t, $, b, C, A) {
  const n = m("GSArrow");
  return o(), s("div", null, [
    a("div", S, [
      l(e.$slots, "track", {}, void 0, !0),
      e.disableArrows ? r("", !0) : (o(), s(g, { key: 0 }, [
        d(i, { name: "gsc-arrow-transition" }, {
          default: u(() => [
            e.disabledSide !== "left" ? (o(), _(n, {
              key: 0,
              side: "left",
              class: "gsl-default__arrow gsl-default__arrow--left",
              onClick: t[0] || (t[0] = (f) => e.onMove(-1))
            })) : r("", !0)
          ]),
          _: 1
        }),
        d(i, { name: "gsc-arrow-transition" }, {
          default: u(() => [
            e.disabledSide !== "right" ? (o(), _(n, {
              key: 0,
              side: "right",
              class: "gsl-default__arrow gsl-default__arrow--right",
              onClick: t[1] || (t[1] = (f) => e.onMove(1))
            })) : r("", !0)
          ]),
          _: 1
        })
      ], 64))
    ]),
    a("div", k, [
      l(e.$slots, "indicator", {}, void 0, !0)
    ])
  ]);
}
const D = /* @__PURE__ */ v(y, [["render", G], ["__scopeId", "data-v-7a8033fb"]]);
export {
  D as G
};
//# sourceMappingURL=GSLayoutDefault-6bcb48f1.mjs.map
